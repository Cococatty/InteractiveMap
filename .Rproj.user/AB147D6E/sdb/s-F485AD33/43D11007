{
    "contents" : "# LAST UPDATED AT 21/1, 13.00\n# \n# NEXT TO DO: LINE \n\n# Loading the requiring sources\nrequire(\"devtools\") || install.packages(\"devtools\")\nrequire(\"scatterD3\") || install.packages(\"scatterD3\")\nlibrary(scatterD3)\ndevtools::install_github(\"juba/scatterD3\")\nrequire(\"shiny\") || install.packages(\"shiny\")\nrequire(\"DT\") || install.packages(\"DT\")\n\n# defining a function \n#is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1]) \n\n\n\n# Set the working directory and read the required data\n setwd(\"//file/UsersY$/yzh215/Home/Desktop/InteractiveMap\")\n# setwd(\"/home/cococatty/Desktop/InteractiveMap\")\n# setwd(\"C:/Users/User/Desktop/InteractiveMap/Shiny\")\n\n\nsource(\"helper.R\")\n\n# Initializing the variables\nminGrp <- 1\nmaxGrp <- 2\n\n\n#Definte UI for the application\nui <- fluidPage(\n  titlePanel(title = \"Interactive Map of New Zealand\", windowTitle = \"Interactive Map of New Zealand\"),\n  \n  sidebarPanel(\n    sliderInput(\"categories\", \"Number of Categories\", min = 1, max = 10, value = 5\n    )\n    , br()\n    , selectInput(\n      \"classIntMethod\"#, \"Division Method\"\n      , label = \"Select the intervals\"\n      , choices = list(\"Equal\" = \"equal\"\n                       , \"Fisher\" = \"fisher\"\n                       , \"Fixed\"= \"fixed\"\n                       , \"Pretty\" = \"pretty\"\n                       , \"Quantiles\" = \"quantile\"\n                       , \"Standard Deviation\" = \"sd\"\n      )\n      , selected = \"quantile\"\n      , multiple = FALSE\n    )\n    , br()\n    \n    # The following part is groupCheckBox format for the travelMeans\n    , checkboxGroupInput(\n      \"travelMeans\"\n      , label = \"Select the mean below:\"\n      , choices = meanChoices\n      , selected = NULL\n    )\n    \n    , br()\n  ),\n  \n  #Show the map\n  mainPanel(\n    tabsetPanel(#type = \"tabs\",\n      tabPanel(\"Single-Mean Table\", DT::dataTableOutput(\"onetable\"), hr())\n      , tabPanel(\"Single-Mean Plot\", plotOutput(\"oneMap\", width = \"1200px\", height = \"800px\"))\n      , tabPanel(\"Scatterplot\", scatterD3Output(\"biScatter\", width = \"100%\", height = \"600px\"))\n      , tabPanel(\"Two-Mean Plot\", plotOutput(\"biMap\", width = \"1200px\", height = \"800px\")\n                 , verbatimTextOutput(\"biMapText\"))\n    )\n    \n    , position=\"center\"\n    , height= \"auto\"\n  )\n)\n\n\n\n\n#Definte server logic required to draw the map\nserver <- function(input, output, session) {\n  \n  updateoneTable <- reactive({\n    onetable <- subset(newtable, newtable$MeanCode == tail(input$travelMeans, 1), select = -c(MeanCode)\n                       , colnames = c('Territory', 'Mean Name', 'Number of People', 'Overall weight'))\n    onetable <- onetable[order(onetable$Percentage),]\n    row.names(onetable) <- seq(length = nrow(onetable))\n    return (onetable)\n  })\n  \n  output$onetable <- DT::renderDataTable({\n    DT::datatable(\n      updateoneTable(), selection = \"none\"\n      , extensions = list(\"Scroller\")\n      , options = list(\n        scrollY = 700\n        , pageLength = 30\n        , lengthMenu = list(c(30, -1), c(\"30\", \"All\"))\n      )\n    )}\n    , server = TRUE\n  )\n  \n  \n  observe({\n    if (length(input$travelMeans) > maxGrp)\n    {\n      updateCheckboxGroupInput(session, 'travelMeans', selected = tail(input$travelMeans,maxGrp))\n    }\n  })\n  \n  \n  output$biMapText <- renderText({\n    paste(\"Red: \", meandata$MeanName[meandata$MeanCode == input$travelMeans[1]]\n          , \"Purple: A combination of both travel means\"\n          , \"Blue: \", meandata$MeanName[meandata$MeanCode == input$travelMeans[2]], sep = \"\\n\")\n  })\n  \n  output$oneMap <- renderPlot(singleMap(input$categories, input$travelMeans, input$classIntMethod))\n  output$biMap  <- renderPlot(biMap(input$travelMeans))\n  \n  biList <- reactive({\n    prepareTwoMeans(input$travelMeans)\n  })\n  \n  output$biScatter <- renderScatterD3({\n    tooltips <- paste(\"<strong>Territory Authority: \", biList()$AreaName,\"</strong><br /> Percentage of x: \"\n                      , biList()$Percentage.x, \"<br />\"\n                      , \"Percentage of y: \", biList()$Percentage.y)\n\n    plot <- scatterD3(x = biList()$Percentage.x, y = biList()$Percentage.y\n              , xlab = meandata$MeanName[meandata$MeanCode == unique(biList()$MeanCode.x)]\n              , ylab = meandata$MeanName[meandata$MeanCode == unique(biList()$MeanCode.y)]\n              , tooltip_text = tooltips\n    )\n    return (plot)\n  })\n}\n\nshinyApp(ui = ui, server = server)",
    "created" : 1453335264762.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3540457004",
    "id" : "43D11007",
    "lastKnownWriteTime" : 1453336864,
    "path" : "//file/UsersY$/yzh215/Home/Desktop/InteractiveMap/combined.R",
    "project_path" : "combined.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}